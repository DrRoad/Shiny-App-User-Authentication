shiny::runApp()
DB_NAME <- "data.sqlite"
TBL_USER_DATA <- "users"
DB_test_connect <- function(){
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
print("#######################")
print("- Connected to Database")
# If a user data table doesn't already exist, create one
if(!(TBL_USER_DATA %in% dbListTables(db))){
print("- Warning: No 'users' table found. Creating table...")
df <- data.frame(ID = as.numeric(character()),
USER = character(),
HASH = character(),
stringsAsFactors = FALSE)
dbWriteTable(db, TBL_USER_DATA, df)
}
print("- Table exists.")
print("#######################")
dbDisconnect(db)
unlink(DB_NAME)
}
DB_test_connect()
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
if(!(TBL_USER_DATA %in% dbListTables(db))){
print("- Warning: No 'users' table found. Creating table...")
df <- data.frame(ID = as.numeric(character()),
USER = character(),
HASH = character(),
stringsAsFactors = FALSE)
dbWriteTable(db, TBL_USER_DATA, df)
}
dbDisconnect(db)
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
DB_NAME <- "data.sqlite"
TBL_USER_DATA <- "users"
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
dbDisconnect(db)
DB_NAME <- "data.sqlite"
TBL_USER_DATA <- "users"
DB_test_connect <- function(){
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
print("#######################")
print("- Connected to Database")
# If a user data table doesn't already exist, create one
if(!(TBL_USER_DATA %in% dbListTables(db))){
print("- Warning: No 'users' table found. Creating table...")
df <- data.frame(ID = as.numeric(character()),
USER = character(),
HASH = character(),
stringsAsFactors = FALSE)
dbWriteTable(db, TBL_USER_DATA, df)
}
print("- Table exists.")
print("#######################")
dbDisconnect(db)
}
DB_test_connect()
runApp()
library(bcrypt)
runApp()
runApp()
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
DB_NAME <- "data.sqlite"
TBL_USER_DATA <- "users"
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
users_data <- dbReadTable(db, TBL_USER_DATA)
View(users_data)
sha256(abc)
sha256("abc")
identical(sha256("abc"), users_data$HASH[1])
identical(sha256("abc", key = users_data$HASH[1]), users_data$HASH[1])
hash <- users_data[users_data$USER=="abc", "HASH"]
hash <- users_data[users_data$USER=="abc", "HASH"]
hash
identical(hash, sha256("abc"))
sha256("abc")
hash
sha256("abc") == hash
runApp()
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
DB_NAME <- "data.sqlite"
TBL_USER_DATA <- "users"
db <- dbConnect(RSQLite::SQLite(), DB_NAME)
users_data <- dbReadTable(db, TBL_USER_DATA)
dbDisconnect(db)
dbDisconnect(db)
